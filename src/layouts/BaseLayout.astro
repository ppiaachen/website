---
import "@fontsource/inter";
import { ClientRouter } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = Astro.site ? new URL(Astro.url.pathname, Astro.site) : "";

const { title, description, image } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
    <link rel="canonical" href={canonicalURL} />
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={new URL(image, Astro.url)} />}
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    {
      image && (
        <meta property="twitter:image" content={new URL(image, Astro.url)} />
      )
    }
    <ClientRouter />
  </head>
  <body class="font-sans antialiased">
    <slot />
  </body>
</html>

<script>
  document.addEventListener("astro:page-load", async () => {
    const preline = await import("preline/dist/preline.js");
    preline.HSStaticMethods.autoInit();

    const { default: Bricks } = await import("bricks.js");

    const galleryElement = document.getElementById("gallery");
    if (galleryElement) {
      const instance = Bricks({
        container: "#gallery",
        packed: "data-packed",
        sizes: [
          { columns: 1, gutter: 5 },
          { mq: "768px", columns: 2, gutter: 10 },
          { mq: "1024px", columns: 3, gutter: 25 },
        ],
      });

      instance.on("pack", () => galleryElement.classList.remove("opacity-0"));
      instance.resize(true).pack();
    }

    const elBack = document.getElementById("navigate-back");
    elBack?.addEventListener("click", () => history.back());
  });
</script>
